{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet FetchDataComponent = class FetchDataComponent {\n  constructor(http, baseUrl, fb) {\n    this.data = [];\n    this.personForm = fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      streetName: ['', Validators.required],\n      houseNumber: ['', Validators.required],\n      apartment: [''],\n      postalCode: ['', Validators.required],\n      town: ['', Validators.required],\n      phoneNumber: ['', Validators.required],\n      dateOfBirth: ['', Validators.required]\n    });\n    //http.get<Person[]>(baseUrl + 'weatherforecast').subscribe(result => {\n    http.get(baseUrl + 'person').subscribe(result => {\n      this.data = result;\n    }, error => console.error(error));\n  }\n};\nFetchDataComponent = __decorate([Component({\n  selector: 'app-fetch-data',\n  templateUrl: './fetch-data.component.html'\n}), __param(1, Inject('BASE_URL'))], FetchDataComponent);\nexport { FetchDataComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAEjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAM5D,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAI7BC,YAAYC,IAAgB,EAAsBC,OAAe,EAAEC,EAAe;IAH3E,SAAI,GAAa,EAAE;IAIxB,IAAI,CAACC,UAAU,GAAGD,EAAE,CAACE,KAAK,CAAC;MACzBC,SAAS,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MACpCC,QAAQ,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ,CAAC;MACnCE,UAAU,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACS,QAAQ,CAAC;MACrCG,WAAW,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACS,QAAQ,CAAC;MACtCI,SAAS,EAAE,CAAC,EAAE,CAAC;MACfC,UAAU,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACS,QAAQ,CAAC;MACrCM,IAAI,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACS,QAAQ,CAAC;MAC/BO,WAAW,EAAE,CAAC,EAAE,EAAEhB,UAAU,CAACS,QAAQ,CAAC;MACtCQ,WAAW,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACS,QAAQ;KACtC,CAAC;IACF;IACAN,IAAI,CAACe,GAAG,CAAWd,OAAO,GAAG,QAAQ,CAAC,CAACe,SAAS,CAACC,MAAM,IAAG;MACxD,IAAI,CAACC,IAAI,GAAGD,MAAM;IACpB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;CACD;AArBYrB,kBAAkB,eAJ9BH,SAAS,CAAC;EACT0B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE;CACd,CAAC,EAK+BC,iBAAM,CAAC,UAAU,CAAC,IAJtCzB,kBAAkB,CAqB9B;SArBYA,kBAAkB","names":["Component","Inject","Validators","FetchDataComponent","constructor","http","baseUrl","fb","personForm","group","firstName","required","lastName","streetName","houseNumber","apartment","postalCode","town","phoneNumber","dateOfBirth","get","subscribe","result","data","error","console","selector","templateUrl","__param"],"sourceRoot":"","sources":["C:\\work\\karol\\AngularTest\\Project1\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public data: Person[] = [];\r\n  public personForm: FormGroup;\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string, fb: FormBuilder) {\r\n    this.personForm = fb.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      streetName: ['', Validators.required],\r\n      houseNumber: ['', Validators.required],\r\n      apartment: [''],\r\n      postalCode: ['', Validators.required],\r\n      town: ['', Validators.required],\r\n      phoneNumber: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n    });\r\n    //http.get<Person[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n    http.get<Person[]>(baseUrl + 'person').subscribe(result => {\r\n      this.data = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface Person {\r\n  id: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  streetName: string;\r\n  houseNumber: string;\r\n  apartment: string;\r\n  postalCode: string;\r\n  town: string;\r\n  phoneNumber: string;\r\n  dateOfBirth: string\r\n  age: number;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}