{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction FetchDataComponent_table_15_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"td\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"td\");\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const person_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.streetName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.houseNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.apartment);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.postalCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.town);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.phoneNumber);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.dateOfBirth);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(person_r2.age);\n  }\n}\nfunction FetchDataComponent_table_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 9)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Street\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"House number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Apartment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"th\");\n    i0.ɵɵtext(14, \"Postal code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"th\");\n    i0.ɵɵtext(16, \"Town\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"th\");\n    i0.ɵɵtext(18, \"Phone number\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"th\");\n    i0.ɵɵtext(20, \"Date of birth\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"th\");\n    i0.ɵɵtext(22, \"Age\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(23, \"tbody\");\n    i0.ɵɵtemplate(24, FetchDataComponent_table_15_tr_24_Template, 21, 10, \"tr\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(24);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.data);\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, baseUrl, fb) {\n    this.data = [];\n    this.personForm = fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      streetName: ['', Validators.required],\n      houseNumber: ['', Validators.required],\n      apartment: [''],\n      postalCode: ['', Validators.required],\n      town: ['', Validators.required],\n      phoneNumber: ['', Validators.required],\n      dateOfBirth: ['', Validators.required]\n    });\n    //http.get<Person[]>(baseUrl + 'weatherforecast').subscribe(result => {\n    http.get(baseUrl + 'person').subscribe(result => {\n      this.data = result;\n    }, error => console.error(error));\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 16,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [1, \"card\"], [3, \"formGroup\", \"formGroupChange\"], [1, \"form-row\"], [1, \"col-md-12\"], [1, \"form-group\"], [1, \"col\"], [\"type\", \"text\", \"formControlName\", \"firstName\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"People list - Macrix test task \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"Read all people from file.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 1)(5, \"form\", 2);\n      i0.ɵɵlistener(\"formGroupChange\", function FetchDataComponent_Template_form_formGroupChange_5_listener($event) {\n        return ctx.personForm = $event;\n      });\n      i0.ɵɵelementStart(6, \"div\")(7, \"div\", 3)(8, \"div\", 4)(9, \"div\", 5)(10, \"label\");\n      i0.ɵɵtext(11, \"First Name\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 3)(13, \"div\", 6);\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵtemplate(15, FetchDataComponent_table_15_Template, 25, 1, \"table\", 8);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.personForm);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngIf\", ctx.data.length);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","FetchDataComponent","constructor","http","baseUrl","fb","personForm","group","firstName","required","lastName","streetName","houseNumber","apartment","postalCode","town","phoneNumber","dateOfBirth","get","subscribe","result","data","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\work\\karol\\AngularTest\\Project1\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts","C:\\work\\karol\\AngularTest\\Project1\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public data: Person[] = [];\r\n  public personForm: FormGroup;\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string, fb: FormBuilder) {\r\n    this.personForm = fb.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      streetName: ['', Validators.required],\r\n      houseNumber: ['', Validators.required],\r\n      apartment: [''],\r\n      postalCode: ['', Validators.required],\r\n      town: ['', Validators.required],\r\n      phoneNumber: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n    });\r\n    //http.get<Person[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n    http.get<Person[]>(baseUrl + 'person').subscribe(result => {\r\n      this.data = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface Person {\r\n  id: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  streetName: string;\r\n  houseNumber: string;\r\n  apartment: string;\r\n  postalCode: string;\r\n  town: string;\r\n  phoneNumber: string;\r\n  dateOfBirth: string\r\n  age: number;\r\n}\r\n","<h1 id=\"tableLabel\">People list - Macrix test task </h1>\r\n\r\n<p>Read all people from file.</p>\r\n\r\n<!--<p *ngIf=\"!data?.length\"><em>Loading...</em></p>-->\r\n\r\n<div class=\"card\">\r\n  <form [(formGroup)] = \"personForm\" >\r\n    <div>\r\n      <div class=\"form-row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n            <label>First Name</label>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <div class=\"col\">\r\n              <input type=\"text\" formControlName =\"firstName\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n</div>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"data.length\">\r\n  <thead>\r\n    <tr>\r\n      <th>First Name</th>\r\n      <th>Last Name</th>\r\n      <th>Street</th>\r\n      <th>House number</th>\r\n      <th>Apartment</th>\r\n      <th>Postal code</th>\r\n      <th>Town</th>\r\n      <th>Phone number</th>\r\n      <th>Date of birth</th>\r\n      <th>Age</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let person of data\">\r\n      <td>{{ person.firstName }}</td>\r\n      <td>{{ person.lastName }}</td>\r\n      <td>{{ person.streetName }}</td>\r\n      <td>{{ person.houseNumber }}</td>\r\n      <td>{{ person.apartment }}</td>\r\n      <td>{{ person.postalCode }}</td>\r\n      <td>{{ person.town }}</td>\r\n      <td>{{ person.phoneNumber }}</td>\r\n      <td>{{ person.dateOfBirth }}</td>\r\n      <td>{{ person.age }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}